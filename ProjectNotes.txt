
High Level Order of Build (in rough order of priority): ---------------------------------------------------------------------------

- make sure the basic relationship structure of models work (user, task, subtask)
- seed table for testing of database, and eventually views
- Build out the basic views structure (be able to go between all the pages)
- Build out full forms (make editable and deletable)
- put in the filters needed for the task/subtask views

- Give each user a profile page only they can edit
(for now this item is the only thing that distinguises the different users
in the future, this can be used to define user roles and admin rights between parent/child
scope too big for sinatra project, i think, we shall see)

- Build a simple/presentable layout


What I have Complete:
- Setting up the environment
- setting up the initial tables/models (need testing)
- set up the migrations


PROJECT DESC/OBJECTIVES ------------------------------------------------------------------------------------------------------------

I think this could be helpful for households where everyone's very busy,
and you want to have everyone pitch in to run the household, especially teaching children chore responsibility, or just a family
who might have a hard time keeping organized! (e.g. ADD FAMILIES!)
It would be cool to see certain metrics on a dashboard that would make it fun for everyone involved.

FAMILY GOALS:
organization
cooperation
responsibility



*********  BUILD OUT (structure of basic pages layout)******************************

For the purposes/scope of this project:
*all users can see all tasks*
*they can all have filter to see tasks by user at the task level*
*everyone has ability to edit and reassign tasks and subtasks for now*


Filters At Task Level:
Filter Task: By Week
Filter Task: Unfinished (lists all tasks that have outstanding subtasks, otherwise all tasks are listed)
Filter Tasks by User (lists all tasks where user is assigned to a subtask within the task)


Tasks:
 -task
 -task
 -task

[click into task:]
 Single Task:
  -task attributes
  edit / delete (can't delete if there are subtasks)

  OR

Filters At Subtask Level:
By Week:
Finished/Unfinished
By User

  -subtask
  -subtask
  -subtask

[click into subtask:]
  Single subask:
   -task attributes
   edit / delete


Functionality
- Create sessions/password login validations

Views
- Home Page
- Login Page
- Create User Form (Signup Page)
- Create User Page (can see all tasks and subtasks)

- Create Task Form
- Create Task Page/index (Can see all tasks (maybe lists how many subtasks))
- Can see

- Create Subtask Form
- Create subtask view. Can click back into the main task

**************************************************



*********************** DATA MODEL RELATIONSHIPS *****************
This model structure is like Artist/Song/Genre pattern:
Where User, Task, Subtask is to Genre, Artist and Song

Users can have many tasks through subtasks, since subtask belongs to task
subtask has many users through task/user table
task has many users through task/user table

Decided that if there is only one task, but no subtasks,
I will just force the database to save the task info as a subtask, but the user can just fill it out as one task.

So:
Task: has many subtasks,, has many users through subtasks
Subtask: belongs to task, has many user tasks, has many users through user task
Users: has many user task, has many subtasks through user task, has many tasks through subtasks
UserTask: belongs to subtask, belongs to user

(MAKE THESE PRELOADED IN DATABASE) --------------------------



 - Groceries/Shopping

 - Dishes
   - load and turn on dishwasher
   - unload dishwasher

 - Laundry
 	- wash cycle
 	- dry cycle
 	- put away clothes

 - Mop

- Cat
	- feed
	- litter

 - Trash
 	- take out trash
 	- bring up trash and recycling

(MAKE THESE FOR TESTING) --------------------------------------

 - Vaccuum
 	- living area
 	- master bedroom
 	- baby room

- Car
	- refuel
	- take for maintenance

 - Yardwork

  - Clean Bathroom
 	- clean sink counter
 	- clean shower
 	- clean toilet

----------------------------------------------------------------


 *************    TASK FORM with ATTRIBUTES ************************
Task Title [selection] or create
radio button () no subtask
  ** same as subtask attributes **

radio button () has subtask(s)
  Show Subtasks
  Add Subtask


SAVE


***************** SUBTASK Form with ATTRIBUTES **********************

Task Title [prepopulated with task title]
Title [selection] or create
Priority [high, medium, low] - nothing urgent, since families should just communicate when urgents
Deadline [same day, future date]
Duration [nothing more than 2 hours]


Notes
Feedback


[]user
[]user
[]user

Create User

SAVE



|||||||||||||||||||||||||||||||||||||||||Nice to Have List (Which means I don't have to do them now): |||||||||||||||||||||||||||||||||||||||||||||||||||

- be able to upload images
- be able to build continuous subtasks to subtasks
- have reoccuring tasks tied to a calendar
- push and pull notifications
- rewards system (medals, etc)
- household tasks delegated to outside help, budget tracker
- definitive household roles like parent/child/caregiver/service person with different admin/viewing privileges
- have "owners" who are expected to become experts in certain tasks, so if delegated to someone else, they can go to that person for questions/help (right now it's just mommy for all =(((()
- anything that can help break out care giving for baby/kids for caregivers
- create household view, at this point assume only users at within the same household
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
